//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity reactiveUIEntity { get { return GetGroup(GameMatcher.ReactiveUI).GetSingleEntity(); } }
    public ReactiveUIComponent reactiveUI { get { return reactiveUIEntity.reactiveUI; } }
    public bool hasReactiveUI { get { return reactiveUIEntity != null; } }

    public GameEntity SetReactiveUI(UnityEngine.GameObject newUiContent) {
        if (hasReactiveUI) {
            throw new Entitas.EntitasException("Could not set ReactiveUI!\n" + this + " already has an entity with ReactiveUIComponent!",
                "You should check if the context already has a reactiveUIEntity before setting it or use context.ReplaceReactiveUI().");
        }
        var entity = CreateEntity();
        entity.AddReactiveUI(newUiContent);
        return entity;
    }

    public void ReplaceReactiveUI(UnityEngine.GameObject newUiContent) {
        var entity = reactiveUIEntity;
        if (entity == null) {
            entity = SetReactiveUI(newUiContent);
        } else {
            entity.ReplaceReactiveUI(newUiContent);
        }
    }

    public void RemoveReactiveUI() {
        reactiveUIEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ReactiveUIComponent reactiveUI { get { return (ReactiveUIComponent)GetComponent(GameComponentsLookup.ReactiveUI); } }
    public bool hasReactiveUI { get { return HasComponent(GameComponentsLookup.ReactiveUI); } }

    public void AddReactiveUI(UnityEngine.GameObject newUiContent) {
        var index = GameComponentsLookup.ReactiveUI;
        var component = CreateComponent<ReactiveUIComponent>(index);
        component.uiContent = newUiContent;
        AddComponent(index, component);
    }

    public void ReplaceReactiveUI(UnityEngine.GameObject newUiContent) {
        var index = GameComponentsLookup.ReactiveUI;
        var component = CreateComponent<ReactiveUIComponent>(index);
        component.uiContent = newUiContent;
        ReplaceComponent(index, component);
    }

    public void RemoveReactiveUI() {
        RemoveComponent(GameComponentsLookup.ReactiveUI);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherReactiveUI;

    public static Entitas.IMatcher<GameEntity> ReactiveUI {
        get {
            if (_matcherReactiveUI == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ReactiveUI);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherReactiveUI = matcher;
            }

            return _matcherReactiveUI;
        }
    }
}
